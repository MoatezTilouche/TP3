name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout Code
        uses: actions/checkout@v2

      # Étape 2 : Construire l’image Docker
      - name: Build Docker Image
        run: docker build -t TP3:latest .

      # Étape 3 : Lancer le conteneur et exécuter les tests (si tu as un script run-tests.sh)
      - name: Run Container and Execute Tests
        run: docker run --rm TP3:latest ./run-tests.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Étape 4 : Connexion à Docker Hub (via secrets du dépôt GitHub)
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 5 : Tag de l’image
      - name: Tag Docker Image
        run: docker tag TP3:latest moateztilouche/TP3:latest

      # Étape 6 : Pousser l’image sur Docker Hub
      - name: Push Docker Image
        run: docker push moateztilouche/TP3:latest

      # Étape 7 (optionnelle) : Déployer sur Kubernetes
      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
          kubectl --kubeconfig=kubeconfig apply -f k8s/deployment.yaml
